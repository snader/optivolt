<?php

class {{classFileName}} extends Model
{

    {{classFileConst}}

    public  ${{idName}}Id;
    public  $languageId      = null;
    {{classUrlProperties}}
    public  $title;
    public  $intro;
    public  $content;
    public  $online          = 1;
    public  $order           = 99999;
    public  $created;
    public  $modified;{{classMediaCategoriesProperties}}
    private $aLocales        = null; // locales for language

    /**
     * validate object
     */

    public function validate()
    {
        if (!is_numeric($this->languageId)) {
            $this->setPropInvalid('languageId');
        }
        if (empty($this->title)) {
            $this->setPropInvalid('title');
        }
        if (!is_numeric($this->online)) {
            $this->setPropInvalid('online');
        }
        if (!is_numeric($this->order)) {
            $this->setPropInvalid('order');
        }{{classValidateCategory}}
    }

    /**
     * check if item is editable
     *
     * @return Boolean
     */
    public function isEditable()
    {
        return true;
    }

    /**
     * check if item is deletable
     *
     * @return Boolean
     */
    public function isDeletable()
    {
        return true;
    }

    /**
     * check if item is online (except with preview mode)
     *
     * @param bool $bPreviewMode
     *
     * @return bool
     */
    public function isOnline($bPreviewMode = false)
    {

        $bOnline = true;
        if (!$bPreviewMode) {
            if (!($this->online)) {
                $bOnline = false;
            }
        }
        {{categoryIsOnline}}

        return $bOnline;
    }

    /**
     * get Locales of this page
     *
     * @return $aLocales
     */
    public function getLocales()
    {
        if ($this->aLocales === null) {
            $this->aLocales = LocaleManager::getLocalesByFilter(['languageId' => $this->languageId]);
        }

        return $this->aLocales;
    }

    {{hasUrlFunctions}}

    {{getSetCode}}

    /*
     * Get language
     * @return Language
     */
    public function getLanguage()
    {
        return LanguageManager::getLanguageById($this->languageId);
    }
}