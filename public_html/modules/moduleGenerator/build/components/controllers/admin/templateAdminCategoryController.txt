<?php

# check if controller is required by index.php
if (!defined('ACCESS')) {
    die;
}

global $oPageLayout;

# set page layout properties
$oPageLayout               = new PageLayout();
$oPageLayout->sWindowTitle = sysTranslations::get('{{singleSystemFileName}}_categories');
$oPageLayout->sModuleName  = sysTranslations::get('{{singleSystemFileName}}_categories');

# get status update from session
$oPageLayout->sStatusUpdate = Session::get("statusUpdate");
Session::clear('statusUpdate'); //remove statusupdate, always show once

# handle add/edit
if (Request::param('ID') == 'bewerken' || Request::param('ID') == 'toevoegen') {
    if (Request::param('ID') == 'bewerken' && is_numeric(Request::param('OtherID'))) {
        $o{{classFileName}}Category = {{classFileName}}CategoryManager::get{{classFileName}}CategoryById(Request::param('OtherID'));
        if (empty($o{{classFileName}}Category)) {
            Router::redirect(ADMIN_FOLDER . "/");
        }
    } else {
        $o{{classFileName}}Category = new {{classFileName}}Category();

        # Set languageId
        $o{{classFileName}}Category->languageId = AdminLocales::language();
    }

    # action = save
    if (Request::postVar("action") == 'save' && CSRFSynchronizerToken::validate()) {
        # load data in object
        $o{{classFileName}}Category->_load($_POST);

        if ($oCurrentUser->isSEO()) {
            $o{{classFileName}}Category->setUrlPartText(Request::postVar('urlPartText'));
        }

        # if object is valid, save
        if ($o{{classFileName}}Category->isValid()) {
            {{classFileName}}CategoryManager::save{{classFileName}}Category($o{{classFileName}}Category); //save object
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_category_saved')); //save status update into session
            Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment() . '/bewerken/' . $o{{classFileName}}Category->{{idName}}CategoryId);
        } else {
            Debug::logError("", "{{classFileName}}Category module php validate error", __FILE__, __LINE__, "Tried to save {{classFileName}}Category with wrong values despite javascript check.<br />" . _d($_POST, 1, 1), Debug::LOG_IN_EMAIL);
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_category_not_saved'));
        }
    }

    $oPageLayout->sViewPath = getAdminView('{{singleSystemFileName}}Categories/{{singleSystemFileName}}Category_form', '{{moduleFolderName}}');
} # set object online/offline
elseif (Request::param('ID') == 'ajax-setOnline') {
    if (!CSRFSynchronizerToken::validate()) {
        die(json_encode(['success'=>false]));
    }
    $bOnline             = Request::getVar("online") ? Request::getVar("online") : 0; //no value, set offline by default
    $bAjax               =Request::getVar("ajax") ? Request::getVar("ajax") : false; //controller requested by ajax
    $i{{classFileName}}CategoryId = Request::param('OtherID');
    $oResObj             = new stdClass(); //standard class for json feedback
    # update online for object
    if (is_numeric($i{{classFileName}}CategoryId)) {
        $oResObj->success            = {{classFileName}}CategoryManager::updateOnlineBy{{classFileName}}CategoryId($bOnline, $i{{classFileName}}CategoryId);
        $oResObj->{{idName}}CategoryId = $i{{classFileName}}CategoryId;
        $oResObj->online             = $bOnline;
    }

    # redirect to overview page if this isn't AJAX
    if (!$bAjax) {
        Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment() . '');
    }

    die(json_encode($oResObj));
} # delete object
elseif (Request::param('ID') == 'verwijderen' && is_numeric(Request::param('OtherID'))) {
    if (CSRFSynchronizerToken::validate()) {
        if (is_numeric(Request::param('OtherID'))) {
            $o{{classFileName}}Category = {{classFileName}}CategoryManager::get{{classFileName}}CategoryById(Request::param('OtherID'));
        }
        if (!empty($o{{classFileName}}Category) && {{classFileName}}CategoryManager::delete{{classFileName}}Category($o{{classFileName}}Category)) {
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_category_deleted')); //save status update into session
        } else {
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_category_not_deleted')); //save status update into session
        }
    }
    Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment());
} elseif (Request::param('ID') == 'volgorde-wijzigen') {

    if (Request::postVar('action') == 'saveOrder' && CSRFSynchronizerToken::validate()) {
        if (Request::postVar('order')) {
            $a{{classFileName}}CategoryIds = explode('|', Request::postVar('order'));
            $iC                   = 1;
            foreach ($a{{classFileName}}CategoryIds AS $i{{classFileName}}CategoryId) {
                $o{{classFileName}}Category        = {{classFileName}}CategoryManager::get{{classFileName}}CategoryById($i{{classFileName}}CategoryId);
                $o{{classFileName}}Category->order = $iC;
                if ($o{{classFileName}}Category->isValid()) {
                    {{classFileName}}CategoryManager::save{{classFileName}}Category($o{{classFileName}}Category);
                }
                $iC++;
            }
        }
        Session::set('statusUpdate', sysTranslations::get('global_sequence_saved')); //save status update into session
        Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment());
    }

    // get all items for order changing
    $a{{classFileName}}Categories    = {{classFileName}}CategoryManager::get{{classFileName}}CategoriesByFilter(['showAll' => true, 'languageId' => AdminLocales::language()]);
    $oPageLayout->sViewPath = getAdminView('{{singleSystemFileName}}Categories/{{singleSystemFileName}}Categories_change_order', '{{moduleFolderName}}');
} # display overview
else {
    $a{{classFileName}}Categories    = {{classFileName}}CategoryManager::get{{classFileName}}CategoriesByFilter(['showAll' => true, 'languageId' => AdminLocales::language()]);
    $oPageLayout->sViewPath = getAdminView('{{singleSystemFileName}}Categories/{{singleSystemFileName}}Categories_overview', '{{moduleFolderName}}');
}

# include template
include_once getAdminView('layout');