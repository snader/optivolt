<?php

# check if controller is required by index.php
if (!defined('ACCESS')) {
    die;
}

# reset crop settings
Session::clear('aCropSettings');

global $oPageLayout;

# set page layout properties
$oPageLayout               = new PageLayout();
$oPageLayout->sWindowTitle = sysTranslations::get('{{singleSystemFileName}}');
$oPageLayout->sModuleName  = sysTranslations::get('{{singleSystemFileName}}');

# get status update from session
$oPageLayout->sStatusUpdate = Session::get("statusUpdate");
Session::clear('statusUpdate'); //remove statusupdate, always show once

// handle perPage
if (Request::postVar('setPerPage')) {
    Session::set('{{moduleFolderName}}PerPage', Request::postVar('perPage'));
}

// handle filter
$a{{classFileName}}Filter = Session::get('{{moduleFolderName}}Filter');
if (Request::postVar('filter{{classFileName}}s')) {
    $a{{classFileName}}Filter            = Request::postVar('{{moduleFolderName}}Filter');
    $a{{classFileName}}Filter['showAll'] = true; // manually set showAll to true
    Session::set('{{moduleFolderName}}Filter', $a{{classFileName}}Filter);
}

if (Request::postVar('resetFilter') || empty($a{{classFileName}}Filter)) {
    Session::clear('{{moduleFolderName}}Filter');
    $a{{classFileName}}Filter                       = [];
    $a{{classFileName}}Filter['q']                  = '';
    $a{{classFileName}}Filter['showAll']            = true; // manually set showAll to true{{controllerCategoryFilter}}
}

# handle add/edit
if (Request::param('ID') == 'bewerken' || Request::param('ID') == 'toevoegen') {

    # set crop referrer for pages module
    Session::set('cropReferrer', ADMIN_FOLDER . '/' . Request::getControllerSegment() . '/bewerken/' . Request::param('OtherID'));

    if (Request::param('ID') == 'bewerken' && is_numeric(Request::param('OtherID'))) {
        $o{{classFileName}} = {{classFileName}}Manager::get{{classFileName}}ById(Request::param('OtherID'));
        if (!$o{{classFileName}}) {
            Router::redirect(ADMIN_FOLDER . "/");
        }
        # is editable?
        if (!$o{{classFileName}}->isEditable()) {
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_not_edited')); //save status update into session
            Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment());
        }
    } else {
        $o{{classFileName}}             = new {{classFileName}}();
        $o{{classFileName}}->languageId = AdminLocales::language();
    }

    # action = save
    if (Request::postVar("action") == 'save' && CSRFSynchronizerToken::validate()) {

        # load data in object
        $o{{classFileName}}->_load($_POST);

        # set some properties after load, _load strips tags for all inputs
        $o{{classFileName}}->intro      = Request::postVar('intro');
        $o{{classFileName}}->content    = Request::postVar('content');

        {{saveCategories}}

        # if object is valid, save
        if ($o{{classFileName}}->isValid()) {
            {{classFileName}}Manager::save{{classFileName}}($o{{classFileName}}); //save item
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_saved')); //save status update into session
            Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment() . '/bewerken/' . $o{{classFileName}}->{{idName}}Id);
        } else {
            Debug::logError("", "{{classFileName}} module php validate error", __FILE__, __LINE__, "Tried to save {{classFileName}} with wrong values despite javascript check.<br />" . _d($_POST, 1, 1), Debug::LOG_IN_EMAIL);
            $oPageLayout->sStatusUpdate = sysTranslations::get('{{singleSystemFileName}}_not_saved');
        }
    }

    {{saveMedia}}

    $oPageLayout->sViewPath = getAdminView('{{moduleFolderName}}/{{singleSystemFileName}}_form', '{{moduleFolderName}}');

} elseif (Request::param('ID') == 'volgorde-wijzigen') {

    if (Request::postVar('action') == 'saveOrder' && CSRFSynchronizerToken::validate()) {
        if (Request::postVar('order')) {
            $a{{classFileName}}Ids = explode('|', Request::postVar('order'));
            $iC               = 1;
            foreach ($a{{classFileName}}Ids AS $i{{classFileName}}Id) {
                $o{{classFileName}}        = {{classFileName}}Manager::get{{classFileName}}ById($i{{classFileName}}Id);
                $o{{classFileName}}->order = $iC;
                if ($o{{classFileName}}->isValid()) {
                    {{classFileName}}Manager::save{{classFileName}}($o{{classFileName}});
                }
                $iC++;
            }
        }
        Session::set('statusUpdate', sysTranslations::get('global_sequence_saved')); //save status update into session

        Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment());
    }

    // get all items for order changing
    $a{{classFileName}}s      = {{classFileName}}Manager::get{{classFileName}}sByFilter(['showAll' => true, 'languageId' => AdminLocales::language()]);
    $oPageLayout->sViewPath = getAdminView('{{moduleFolderName}}/{{multipleSystemFileName}}_change_order', '{{moduleFolderName}}');

} elseif (Request::param('ID') == 'verwijderen' && is_numeric(Request::param('OtherID'))) {
    if (CSRFSynchronizerToken::validate()) {
        if (is_numeric(Request::param('OtherID'))) {
            $o{{classFileName}} = {{classFileName}}Manager::get{{classFileName}}ById(Request::param('OtherID'));
        }
        if ($o{{classFileName}} && {{classFileName}}Manager::delete{{classFileName}}($o{{classFileName}})) {
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_deleted')); //save status update into session
        } else {
            Session::set('statusUpdate', sysTranslations::get('{{singleSystemFileName}}_not_deleted')); //save status update into session
        }
    }
    Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment());
{{cropImageList}}
} elseif (Request::param('ID') == 'ajax-setOnline') {
    if (!CSRFSynchronizerToken::validate()) {
        die(json_encode(['success'=>false]));
    }
    $bOnline     = Request::getVar("online") ? Request::getVar("online") : 0; //no value, set offline by default
    $bAjax       = Request::getVar("ajax") ? Request::getVar("ajax") : false; //controller requested by ajax
    $i{{classFileName}}Id = Request::param('OtherID');
    $oResObj     = new stdClass(); //standard class for json feedback
    # update online for page
    if (is_numeric($i{{classFileName}}Id)) {
        $oResObj->success    = {{classFileName}}Manager::updateOnlineBy{{classFileName}}Id($bOnline, $i{{classFileName}}Id);
        $oResObj->{{idName}}Id = $i{{classFileName}}Id;
        $oResObj->online     = $bOnline;
    }

    if (!$bAjax) {
        Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment());
    }
    print json_encode($oResObj);
    die;
} else {

    $iNrOfRecords = DBConnection::count('{{tableName}}');
    $iPerPage     = Session::get('{{moduleFolderName}}PerPage', 10);
    $iCurrPage    = Request::getVar('page') ? Request::getVar('page') : 1;

    if (Request::postVar('setPerPage')) {
        // reset iCurrPage on setPerPage change
        $iCurrPage = 1;
    }
    if ($iCurrPage > ($iNrOfRecords / $iPerPage) + 1) {
        // prevent non existing iCurrpage
        $iCurrPage = (round($iNrOfRecords / $iPerPage) + 1);
    }

    $iStart = (($iCurrPage - 1) * $iPerPage);
    if (!is_numeric($iCurrPage) || $iCurrPage <= 0) {
        Router::redirect(ADMIN_FOLDER . '/' . Request::getControllerSegment());
    }

    # add language to filter
    $a{{classFileName}}Filter['languageId'] = AdminLocales::language();

    #display overview
    $a{{classFileName}}s             = {{classFileName}}Manager::get{{classFileName}}sByFilter($a{{classFileName}}Filter, $iPerPage, $iStart, $iFoundRows);
    $iPageCount             = !empty($iPerPage) ? (ceil($iFoundRows / $iPerPage)) : 0;
    $oPageLayout->sViewPath = getAdminView('{{moduleFolderName}}/{{multipleSystemFileName}}_overview', '{{moduleFolderName}}');
}

# include template
include_once getAdminView('layout');